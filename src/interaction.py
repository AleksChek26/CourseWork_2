from api import HeadHunterAPI
from data_models import Vacancy
from storage import JSONSaver, CSVSaver, XLSSaver


class UserInteraction:
    """–û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —á–µ—Ä–µ–∑ –∫–æ–Ω—Å–æ–ª—å"""

    def run(self):
        hh_api = HeadHunterAPI()
        profession = input("üßê –í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –ø—Ä–æ—Ñ–µ—Å—Å–∏—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'Java-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫'): ")
        vacancies = hh_api.get_vacancies(profession)
        vacancies_objs = Vacancy.cast_to_object_list(vacancies)

        saver = JSONSaver()  # –∏–ª–∏ CSVSaver(), –∏–ª–∏ XLSSaver()
        for vacancy in vacancies_objs:
            saver.add_vacancy(vacancy)

        while True:
            print("\nüîç –ú–µ–Ω—é:")
            print("1Ô∏è‚É£ –ü–æ–∫–∞–∑–∞—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏")
            print("2Ô∏è‚É£ –í—ã–±—Ä–∞—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é")
            print("3Ô∏è‚É£ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∑–∞—Ä–ø–ª–∞—Ç–µ")
            print("4Ô∏è‚É£ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ä–µ–≥–∏–æ–Ω—É")
            print("5Ô∏è‚É£ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –æ–ø—ã—Ç—É —Ä–∞–±–æ—Ç—ã")
            print("6Ô∏è‚É£ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –≥–æ—Ä–æ–¥—É")
            print("7Ô∏è‚É£ –£–¥–∞–ª–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é")
            print("8Ô∏è‚É£ –ü–µ—Ä–µ–∑–∞–¥–∞—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏—é")
            print("9Ô∏è‚É£ –í—ã—Ö–æ–¥")
            choice = input("‚ú® –í–∞—à –≤—ã–±–æ—Ä: ")

            if choice == '1':
                self.show_vacancies(saver.get_vacancies())

            elif choice == '2':
                self.select_vacancy(saver.get_vacancies())

            elif choice == '3':
                min_salary = input("üí∞ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞: ")
                max_salary = input("üí∞ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞: ")
                filtered = saver.get_vacancies({"salary": (float(min_salary), float(max_salary))})
                self.show_vacancies(filtered)

            elif choice == '4':
                region = input("üèò –†–µ–≥–∏–æ–Ω (–ú–æ—Å–∫–≤–∞, –ü–µ—Ç–µ—Ä–±—É—Ä–≥ –∏ —Ç.–¥.): ")
                filtered = saver.get_vacancies({"region": region})
                self.show_vacancies(filtered)

            elif choice == '5':
                exp_level = input("üë©‚Äçüíª –£—Ä–æ–≤–µ–Ω—å –æ–ø—ã—Ç–∞ (Junior/Middle/Senior): ")
                filtered = saver.get_vacancies({"experience": exp_level})
                self.show_vacancies(filtered)

            elif choice == '6':  # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –≥–æ—Ä–æ–¥—É
                city = input("üìç –ì–æ—Ä–æ–¥ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ú–æ—Å–∫–≤–∞): ")
                filtered = saver.get_vacancies({"city": city})
                self.show_vacancies(filtered)

            elif choice == '7':
                title = input("üìå –ù–∞–∑–≤–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ")
                link = input("üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é: ")
                vacancy_to_delete = Vacancy(title, '', link, None, '')
                saver.delete_vacancy(vacancy_to_delete)
                print("‚úÖ –£–¥–∞–ª–µ–Ω–æ!")

            elif choice == '8':
                profession = input("üßê –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –ø—Ä–æ—Ñ–µ—Å—Å–∏—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'Android-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫'): ")
                vacancies = hh_api.get_vacancies(profession)
                vacancies_objs = Vacancy.cast_to_object_list(vacancies)
                saver.clear()  # –æ—á–∏—â–∞–µ–º —Å—Ç–∞—Ä–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
                for vacancy in vacancies_objs:
                    saver.add_vacancy(vacancy)

            elif choice == '9':
                break

            else:
                print("‚ùó –û—à–∏–±–∫–∞ –≤—ã–±–æ—Ä–∞ –º–µ–Ω—é. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.")

    def select_vacancy(self, vacancies):
        if len(vacancies) == 0:
            print("üö´ –ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –≤–∞–∫–∞–Ω—Å–∏–π.")
            return

        print("\n–°–ø–∏—Å–æ–∫ –≤–∞–∫–∞–Ω—Å–∏–π:\n")
        for idx, vacancy in enumerate(vacancies):
            print(
                f"{idx + 1}. üéØ {vacancy['title']} ({vacancy['city']}) üëâ {vacancy['link']}\n–ó–∞—Ä–∞–±–æ—Ç–æ–∫: {vacancy['salary']}\n–û–ø–∏—Å–∞–Ω–∏–µ: {vacancy['description']}\n")

        selection = input("üñä –í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞–∫–∞–Ω—Å–∏–∏ –¥–ª—è –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ (–∏–ª–∏ Enter –¥–ª—è –æ—Ç–º–µ–Ω—ã): ")
        if selection.isdigit() and 1 <= int(selection) <= len(vacancies):
            selected_idx = int(selection) - 1
            selected_vacancy = vacancies[selected_idx]
            print("\n–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞–∫–∞–Ω—Å–∏–∏:\n")
            print(f"üéØ –ù–∞–∑–≤–∞–Ω–∏–µ: {selected_vacancy['title']}")
            print(f"üìç –ì–æ—Ä–æ–¥: {selected_vacancy['city']}")  # –î–æ–±–∞–≤–ª–µ–Ω –≤—ã–≤–æ–¥ –≥–æ—Ä–æ–¥–∞
            print(f"üîó –°—Å—ã–ª–∫–∞: {selected_vacancy['link']}")
            print(f"üí∞ –ó–∞—Ä–∞–±–æ—Ç–æ–∫: {selected_vacancy['salary']}")
            print(f"üìù –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è: {selected_vacancy['description']}")
        else:
            print("‚ùå –û—Ç–º–µ–Ω–∞ –≤—ã–±–æ—Ä–∞.")

    def show_vacancies(self, vacancies):
        if len(vacancies) > 0:
            for i, vacancy in enumerate(vacancies):
                print(
                    f"\n{i + 1}. üéØ {vacancy['title']} ({vacancy['city']}) üëâ {vacancy['link']}\n–ó–∞—Ä–∞–±–æ—Ç–æ–∫: {vacancy['salary']}\n–û–ø–∏—Å–∞–Ω–∏–µ: {vacancy['description']}")
        else:
            print("üö´ –ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –≤–∞–∫–∞–Ω—Å–∏–π.")
